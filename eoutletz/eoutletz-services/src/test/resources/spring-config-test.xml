<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sws="http://www.springframework.org/schema/web-services"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- <context:component-scan base-package="com.eoutletz.service"></context:component-scan>
	
	<context:exclude-filter type="regex" expression="com.ehi.bfadapter.service.persist.*"/>
 -->	
	 
	<context:property-placeholder location="classpath:service.properties" ignore-unresolvable="true"/>
	<context:property-placeholder location="classpath:app.properties" ignore-unresolvable="true"/>

	<context:component-scan base-package="com.eoutletz.service">

	<context:exclude-filter type="regex" expression="com.eoutletz.persist.*"/>
		
	</context:component-scan>
	<context:component-scan  base-package="com.eoutletz.common"></context:component-scan>
	<context:component-scan base-package="com.eoutletz.persist"/>
  
	<!-- <bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory" />
	<bean id="memberServiceMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="com.ehi.bfadapter.domain" />
    </bean>
	<bean id="webServiceTemplate" class="org.springframework.ws.client.core.WebServiceTemplate">
		<constructor-arg ref="messageFactory" />
        <property name="marshaller" ref="memberServiceMarshaller"></property>
        <property name="unmarshaller" ref="memberServiceMarshaller"></property>
		<property name="defaultUri"
			value="${ehi.bfa.base.partner.endpoint}" />
		
		<property name="interceptors">
	        <list>
	            <ref bean="Wss4jSecurityInterceptor" />
	            <ref bean="payloadValidatingInterceptor" />
	        </list>
		</property>
	</bean>

    <bean id="payloadValidatingInterceptor" 
    	class="com.ehi.bfadapter.interceptor.BFPayloadValidatingInterceptor">
        <property name="schemas">
        	<list>
				<value>classpath*:/schema/bf/memberservice/*.xsd</value>
        	</list>
        </property>
        <property name="validateRequest" value="false"/>
        <property name="validateResponse" value="true"/>
    </bean>
	
	<bean id="Wss4jSecurityInterceptor" class="com.ehi.bfadapter.interceptor.BFWss4jSecurityInterceptor">
		<property name="securementActions" value="Signature" />
		<property name="securementSignatureKeyIdentifier" value="DirectReference" />
		<property name="securementUsername" value="${ehi.bfa.base.securement.username}" />
		<property name="securementPassword" value="${ehi.bfa.base.securement.password}" />
		<property name="securementSignatureCrypto">
			<bean class="com.ehi.bfadapter.service.factory.BFCryptoFactoryBean">
				<property name="keyStorePassword" value="${ehi.bfa.base.keystore.password}" />
				<property name="keyStoreLocation" value="${ehi.bfa.base.keystore.location}" />
			</bean>
		</property>
	</bean>	
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate"/>
	 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      	<property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
    	<property name="url" value="jdbc:hsqldb:mem:test"/>
    	<property name="username" value="sa"/>
    	<property name="password" value=""/>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.ehi.bfadapter.persist"/>
        
        <property name="hibernateProperties">
        	<props>
	            <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
	            <prop key="hibernate.hbm2ddl.auto">update</prop>
	            <prop key="hibernate.show_sql">true</prop>
        	</props>
        </property>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <bean id="dataAccess" class="com.eoutletz.persist.db.DataAccess">
    	<property name="sessionFactory" ref="sessionFactory" />
    </bean>
	
	<bean id="javaMailSenderImpl" class="org.springframework.mail.javamail.JavaMailSenderImpl" />
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="25"/>
        <property name="username" value="raj.jsp@gmail.com"/>
        <property name="password" value="Tuesday785%"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
     </bean>
</beans>
